import os
import subprocess

def transform_xml_to_pdf(xml_file, xslt_file, output_pdf):
    """
    Transforme un fichier XML en PDF √† l'aide d'un fichier XSLT-FO en utilisant Apache FOP.
    """
    try:
        # ‚úÖ R√©cup√©rer le chemin d'Apache FOP (il doit √™tre correctement d√©fini)
        fop_path = "C:\\Users\\HP EliteBook\\Downloads\\fop-2.10-bin\\fop-2.10\\fop\\fop.bat"

        # ‚úÖ V√©rifier si FOP est bien accessible
        if not os.path.exists(fop_path):
            print(f"‚ùå Erreur : Le chemin FOP '{fop_path}' n'existe pas !")
            return False

        # ‚úÖ V√©rifier si les fichiers XML et XSLT existent
        for file in [xml_file, xslt_file]:
            if not os.path.exists(file):
                print(f"‚ùå Erreur : Fichier introuvable : {file}")
                return False

        # ‚úÖ Construire la commande sous forme de LISTE pour √©viter les erreurs d'espaces
        command = [
            fop_path, "-xml", xml_file, "-xsl", xslt_file, "-pdf", output_pdf
        ]

        # ‚úÖ Ex√©cuter la commande
        print(f"üõ†Ô∏è  Ex√©cution de la commande : {' '.join(command)}")
        subprocess.run(command, shell=True, check=True)

        # ‚úÖ V√©rifier si le PDF a bien √©t√© g√©n√©r√©
        if os.path.exists(output_pdf):
            print(f"‚úÖ PDF g√©n√©r√© avec succ√®s : {output_pdf}")
            return True
        else:
            print(f"‚ùå Erreur : Le fichier PDF '{output_pdf}' n'a pas √©t√© g√©n√©r√©.")
            return False

    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erreur lors de la g√©n√©ration du PDF : {e}")
        return False
